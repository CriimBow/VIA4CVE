import csv
import zipfile

from io          import StringIO
from lib.Config  import Configuration as conf
from lib.Source  import Source

class ExploitDB(Source):
  def __init__(self):
    self.name = "exploit-db"
    self.cves = {}
    self.exploits = {}

    _file, r = conf.getFeedData('exploitdb')
    exploits={}
    if _file:
      exploitcsv = csv.DictReader(StringIO(_file.read().decode('utf-8')), delimiter=',')
      for row in exploitcsv:
        self.exploits[row['id']] = row


  def updateRefs(self, cveID, cveData):
    for exploitID in cveData.get('refmap', {}).get('exploit-db', []):
      if exploitID in self.exploits.keys():
        if 'exploit-db' not in cveData: cveData['exploit-db'] = []
        cveData['exploit-db'].append(self.exploits[exploitID])
        cveData['refmap']['exploit-db'].remove(exploitID)
        if len(cveData['refmap']['exploit-db']) == 0:
          del cveData['refmap']['exploit-db']
    return cveData
